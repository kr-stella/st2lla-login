@use "../global/parameter" as global-param;

.login-wrap {
	position: relative;
	display: flex;
	flex-direction: column;
	color: var(--capt-body-color);
	border-radius: var(--capt-border-radius);
	background-color: var(--capt-login-bg);
	background-clip: border-box;
	box-sizing: border-box;
	transition: .25s ease;

	.login-box {
		flex: 1 1 auto;
		padding: calc(1.275rem + .3vw);
	}
}

.welcome p {
	&:first-child {
		font-size: calc(1.375rem + 1vw);
		font-weight: bold;
		margin: 1.6rem 0 .2rem;
		width: 100%;
		text-align: center;
	}
	&:last-child {
		font-size: 18px;
		/* font-weight: bold; */
		margin-bottom: 2rem;
		width: 100%;
		text-align: center;
		color: var(--capt-secondary-color);
	}
}

.login {
	position: relative;
	display: flex;
	flex-flow: column;
	gap: 12px;
}

.input-box {
	position: relative;

	> .input-control {
		display: block;
		width: 100%;
		padding: .5rem 1rem;
		width: 100%;
		min-height: calc(3.5rem + calc(var(--capt-border-width) * 2));
		height: calc(3.5rem + calc(var(--capt-border-width) * 2));
		line-height: 1.25;
		color: var(--capt-body-color);
		font-size: var(--capt-body-font-size);
		font-weight: normal;
		border-width: var(--capt-border-width);
		border-style: var(--capt-border-style);
		border-color: #{global-param.$gray-100-hex};
		border-radius: .5rem;
		background-color: #{global-param.$gray-100-hex};
		background-clip: padding-box;
		box-shadow: var(--main-box-shadow-inset);
		transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;

		&.none-placeholder::placeholder { color: transparent; }
		&.shadow-inset { box-shadow: var(--capt-box-shadow-inset); }
		&.is-valid {
			padding-right: calc(1.5em + 1rem);
			border-color: var(--capt-valid-border);
			background-image: url("../image/input-valid.svg");
			background-repeat: no-repeat;
			background-position: right calc(0.375em + 0.25rem) center;
			background-size: calc(0.75em + 0.5rem) calc(0.75em + 0.5rem);

			&:focus {
				border-color: var(--capt-valid-border);
				box-shadow: var(--capt-box-shadow-inset), 0 0 0 0.25rem rgba(var(--capt-success-rgb), .25);
			}
		}
		&.is-invalid {
			padding-right: calc(1.5em + 1rem);
			border-color: var(--capt-invalid-border);
			background-image: url("../image/input-invalid.svg");
			background-repeat: no-repeat;
			background-position: right calc(0.375em + 0.25rem) center;
			background-size: calc(0.75em + 0.5rem) calc(0.75em + 0.5rem);

			&:focus {
				border-color: var(--capt-invalid-border);
				box-shadow: var(--capt-box-shadow-inset), 0 0 0 0.25rem rgba(var(--capt-danger-rgb), .25);
			}
		}
		&:focus {
			color: var(--capt-body-color);
			background-color: #{global-param.$gray-100-hex};
			border-color: var(--capt-primary-border);
			outline: 0;
			box-shadow: var(--capt-box-shadow-inset), 0 0 0 0.25rem rgba(var(--capt-primary-rgb), .24)
		}
		&:focus, &:not(:placeholder-shown) {
			padding-top: 1.625rem;
			padding-bottom: 0.625rem;

			& ~ label {
				// font-weight: bold;
				font-weight: normal;
				color: rgba(var(--capt-body-color-rgb), .64);
				transform: scale(0.85) translateY(-0.56rem) translateX(0.16rem);
			}
		}
	}

	label {
		position: absolute;
		top: 0;
		left: 0;
		padding: 1rem 1rem;
		height: 100%;
		color: #{global-param.$gray-hex};
		// font-weight: normal;
		font-weight: bold;
		text-align: start;
		white-space: nowrap;
		text-overflow: ellipsis;
		z-index: 2;
		overflow: hidden;
		border: 1px solid transparent;
		pointer-events: none;
		box-sizing: border-box;
		transform-origin: 0 0;
		transition: opacity 0.1s ease-in-out, transform 0.1s ease-in-out;
	}
}